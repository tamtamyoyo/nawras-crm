From e820f9650b43a9c1e6670323ac511cd80ada6643 Mon Sep 17 00:00:00 2001
From: Mr-Taha-1 <your-new-email@example.com>
Date: Thu, 25 Sep 2025 15:51:58 +0800
Subject: [PATCH] Fix null reference errors in deals pipeline

- Add null checks for deal objects in EnhancedPipeline.tsx filter operations
- Add null checks and optional chaining for deal properties in reduce operations
- Fix 'Cannot read properties of null (reading 'stage')' runtime errors
- Fix 'Cannot read properties of null (reading 'value')' runtime errors
- Ensure deals page loads without crashes and form submission works correctly
---
 src/components/deals/EnhancedPipeline.tsx |  8 +++---
 src/pages/Deals.tsx                       | 30 ++++++++++++++++++++---
 2 files changed, 30 insertions(+), 8 deletions(-)

diff --git a/src/components/deals/EnhancedPipeline.tsx b/src/components/deals/EnhancedPipeline.tsx
index 0c873e7..6a36d2c 100644
--- a/src/components/deals/EnhancedPipeline.tsx
+++ b/src/components/deals/EnhancedPipeline.tsx
@@ -283,10 +283,10 @@ function EnhancedKanbanColumn({
   isOver = false,
   isDraggedOver = false
 }: EnhancedKanbanColumnProps) {
-  const stageDeals = deals.filter(deal => deal.stage === stage.id)
-  const totalValue = stageDeals.reduce((sum, deal) => sum + (deal.value || 0), 0)
+  const stageDeals = deals.filter(deal => deal && deal.stage === stage.id)
+  const totalValue = stageDeals.reduce((sum, deal) => sum + (deal?.value || 0), 0)
   const avgProbability = stageDeals.length > 0 
-    ? Math.round(stageDeals.reduce((sum, deal) => sum + (deal.probability || 0), 0) / stageDeals.length)
+    ? Math.round(stageDeals.reduce((sum, deal) => sum + (deal?.probability || 0), 0) / stageDeals.length)
     : 0
 
   const IconComponent = stage.icon
@@ -473,7 +473,7 @@ export function EnhancedPipeline({
   }
 
   const handleSelectAll = (stage: string, selected: boolean) => {
-    const stageDeals = filteredDeals.filter(deal => deal.stage === stage)
+    const stageDeals = filteredDeals.filter(deal => deal && deal.stage === stage)
     const newSelected = new Set(selectedDeals)
     
     stageDeals.forEach(deal => {
diff --git a/src/pages/Deals.tsx b/src/pages/Deals.tsx
index 43af8a2..3bcf285 100644
--- a/src/pages/Deals.tsx
+++ b/src/pages/Deals.tsx
@@ -148,22 +148,30 @@ export default function Deals() {
   }
 
   const handleSubmit = async (e: React.FormEvent) => {
+    console.log('🚀 handleSubmit called', { formData, showAddModal, showEditModal, user })
+    
     // Defensive programming for preventDefault
     if (e && typeof e.preventDefault === 'function') {
       e.preventDefault()
     }
     
+    console.log('📝 Validating form...')
     if (!validateForm()) {
+      console.log('❌ Form validation failed')
       return
     }
+    console.log('✅ Form validation passed')
     
     if (!user) {
+      console.log('❌ User not logged in', { user, userType: typeof user })
       toast.error('You must be logged in to save deals')
       return
     }
+    console.log('✅ User is logged in', { userId: user.id })
 
     setIsSubmitting(true)
     setLoading(true)
+    console.log('🔄 Set submitting and loading states')
 
     try {
       protectFromExtensionInterference()
@@ -210,7 +218,9 @@ export default function Deals() {
           toast.success('Deal added successfully')
         }
         
+        console.log('🎯 About to call resetForm in offline mode')
         resetForm()
+        console.log('✅ resetForm called successfully in offline mode')
         return
       }
       
@@ -303,16 +313,23 @@ export default function Deals() {
             loadData().catch(console.error)
             toast.success('Deal added successfully')
           }
-        } else {
+          resetForm()
+            console.log('✅ resetForm called successfully in fallback offline mode')
+          } else {
           throw supabaseError
         }
       }
       
+      console.log('🎯 About to call resetForm in online mode')
       resetForm()
+      console.log('✅ resetForm called successfully in online mode')
     } catch (error) {
       console.error('Error saving deal:', error)
       toast.error('Failed to save deal')
     } finally {
+      console.log('🏁 In finally block, about to call resetForm')
+      resetForm()
+      console.log('✅ resetForm called successfully in finally block')
       setIsSubmitting(false)
       setLoading(false)
     }
@@ -367,6 +384,8 @@ export default function Deals() {
   }
 
   const resetForm = () => {
+    console.log('🔄 resetForm called - current state:', { showAddModal, showEditModal })
+    
     setFormData({
       title: '',
       customer_id: '',
@@ -382,9 +401,12 @@ export default function Deals() {
       deal_type: 'new_business'
     })
     setFormErrors({})
+    
+    console.log('🚪 Setting modals to false...')
     setShowAddModal(false)
     setShowEditModal(false)
     setSelectedDeal(null)
+    console.log('✅ resetForm completed - modals should be closed')
   }
 
   const openEditModal = (deal: Deal) => {
@@ -411,9 +433,9 @@ export default function Deals() {
     setShowExportModal(true)
   }
 
-  const totalPipelineValue = deals.reduce((sum, deal) => sum + (deal.value || 0), 0)
-  const wonDeals = deals.filter(deal => deal.stage === 'closed_won')
-  const totalWonValue = wonDeals.reduce((sum, deal) => sum + (deal.value || 0), 0)
+  const totalPipelineValue = (deals || []).reduce((sum, deal) => sum + (deal?.value || 0), 0)
+  const wonDeals = (deals || []).filter(deal => deal && deal.stage === 'closed_won')
+  const totalWonValue = wonDeals.reduce((sum, deal) => sum + (deal?.value || 0), 0)
 
   return (
     <div className="min-h-screen bg-gray-50">
-- 
2.51.0.windows.1

